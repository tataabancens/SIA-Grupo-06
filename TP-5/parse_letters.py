
import matplotlib.pyplot as plt
def number_to_binary_list(number):
    # Get the binary representation of the number as a string and remove the '0b' prefix
    binary_string = bin(number)[2:]

    # Ensure the binary string has at most 5 bits
    if len(binary_string) > 5:
        raise ValueError("Number has more than 5 bits in binary representation.")

    # Pad the binary string with leading zeros to make it 5 bits long
    binary_string = binary_string.zfill(5)

    # Convert the binary string to a list of integers
    binary_list = [int(bit) for bit in binary_string]

    return binary_list

def get_letters():
    letters_array = [
        [0x04, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00],   # 0x60, `
        [0x00, 0x0e, 0x01, 0x0d, 0x13, 0x13, 0x0d],   # 0x61, a
        [0x10, 0x10, 0x10, 0x1c, 0x12, 0x12, 0x1c],   # 0x62, b
        [0x00, 0x00, 0x00, 0x0e, 0x10, 0x10, 0x0e],   # 0x63, c
        [0x01, 0x01, 0x01, 0x07, 0x09, 0x09, 0x07],   # 0x64, d
        [0x00, 0x00, 0x0e, 0x11, 0x1f, 0x10, 0x0f],   # 0x65, e
        [0x06, 0x09, 0x08, 0x1c, 0x08, 0x08, 0x08],   # 0x66, f
        [0x0e, 0x11, 0x13, 0x0d, 0x01, 0x01, 0x0e],   # 0x67, g
        [0x10, 0x10, 0x10, 0x16, 0x19, 0x11, 0x11],   # 0x68, h
        [0x00, 0x04, 0x00, 0x0c, 0x04, 0x04, 0x0e],   # 0x69, i
        [0x02, 0x00, 0x06, 0x02, 0x02, 0x12, 0x0c],   # 0x6a, j
        [0x10, 0x10, 0x12, 0x14, 0x18, 0x14, 0x12],   # 0x6b, k
        [0x0c, 0x04, 0x04, 0x04, 0x04, 0x04, 0x04],   # 0x6c, l
        [0x00, 0x00, 0x0a, 0x15, 0x15, 0x11, 0x11],   # 0x6d, m
        [0x00, 0x00, 0x16, 0x19, 0x11, 0x11, 0x11],   # 0x6e, n
        [0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e],   # 0x6f, o
        [0x00, 0x1c, 0x12, 0x12, 0x1c, 0x10, 0x10],   # 0x70, p
        [0x00, 0x07, 0x09, 0x09, 0x07, 0x01, 0x01],   # 0x71, q
        [0x00, 0x00, 0x16, 0x19, 0x10, 0x10, 0x10],   # 0x72, r
        [0x00, 0x00, 0x0f, 0x10, 0x0e, 0x01, 0x1e],   # 0x73, s
        [0x08, 0x08, 0x1c, 0x08, 0x08, 0x09, 0x06],   # 0x74, t
        [0x00, 0x00, 0x11, 0x11, 0x11, 0x13, 0x0d],   # 0x75, u
        [0x00, 0x00, 0x11, 0x11, 0x11, 0x0a, 0x04],   # 0x76, v
        [0x00, 0x00, 0x11, 0x11, 0x15, 0x15, 0x0a],   # 0x77, w
        [0x00, 0x00, 0x11, 0x0a, 0x04, 0x0a, 0x11],   # 0x78, x
        [0x00, 0x11, 0x11, 0x0f, 0x01, 0x11, 0x0e],   # 0x79, y
        [0x00, 0x00, 0x1f, 0x02, 0x04, 0x08, 0x1f],   # 0x7a, z
        [0x06, 0x08, 0x08, 0x10, 0x08, 0x08, 0x06],   # 0x7b, [
        [0x04, 0x04, 0x04, 0x00, 0x04, 0x04, 0x04],   # 0x7c, |
        [0x0c, 0x02, 0x02, 0x01, 0x02, 0x02, 0x0c],   # 0x7d, ]
        [0x08, 0x15, 0x02, 0x00, 0x00, 0x00, 0x00],   # 0x7e, ~
        [0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f, 0x1f]   # 0x7f, DEL
    ]
    for idx ,letter in enumerate(letters_array):
        actual_letter = [number_to_binary_list(number) for number in letter]
        letters_array[idx] = [item for sublist in actual_letter for item in sublist]
    return letters_array

def print_letter(letter_vec):
    data = [letter_vec[i:i + 5] for i in range(0, len(letter_vec), 5)]
    print(data)
    # Create the heatmap
    plt.imshow(data, cmap='gray_r', interpolation='nearest', aspect='auto')

    # Add color bar for reference
    plt.colorbar()

    # Show the plot
    plt.show()

